{% import "Ceres::Widgets.Helper.WidgetHelper" as WidgetHelper %}
{% import "Ceres::Widgets.Helper.TwigBuilder" as Twig %}

{% set customClass = widget.settings.customClass.mobile %}
{% set appearance   = widget.settings.appearance.mobile %}
{% set hasSpacing = widget.settings.customMargin.mobile or widget.settings.customPadding.mobile %}
{% set spacingSettings  = widget.settings.spacing %}
{% set inlineSpacings   = WidgetHelper.getInlineSpacings(spacingSettings, spacingSettings.customPadding.mobile, spacingSettings.customMargin.mobile) %}
{% set spacingClasses   = WidgetHelper.getSpacingClasses(spacingSettings, spacingSettings.customPadding.mobile, spacingSettings.customMargin.mobile) %}
{{ Twig.if("orderInputType == 'postcode'") }}
{{ Twig.else() }}
{{ Twig.endif() }}


{{ Twig.set('title', trans('Ceres::Template.softLoginTitle')) }}
{{ Twig.set('buttonSubmitLabel', 'TEST') }}


{{ Twig.set("contextData","{
        'backlinkUrl': backlinkUrl,
        'orderAccessKey': orderAccessKey,
        'orderConfirmationToken': orderConfirmationToken,
        'orderId': orderId,
        'orderInputType': orderInputType
    }")
}}

{{ Twig.set("texts", "{
        'title': title,
        'description': description,
        'label': label,
        'buttonSubmitLabel': buttonSubmitLabel
    }")
}}
<h2>TESTWIDGET1</h2>
<div class="widget widget-softlogin widget-{{ appearance | default('primary') }}{% if customClass | length > 0 %} {{ customClass }}{% endif %}{% if spacingClasses | length > 0 %} {{ spacingClasses }}{% endif %}"{% if inlineSpacings | length > 0 %} style="{{ inlineSpacings }}"{% endif %}>
    <div class="widget-inner{% if hasSpacing %} m-0 p-0{% endif %}">
        {{ Twig.print("confirmation_softlogin(contextData, texts) | raw") }}
    </div>
</div>

