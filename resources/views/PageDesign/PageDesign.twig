{% import "Ceres::PageDesign.Macros.IncludeComponents" as Loader %}
{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}
{% import "Ceres::PageDesign.Macros.Translations" as Translations %}
{{ component( "Ceres::PageDesign.Components.Notifications" ) }}
{{ component( "Ceres::PageDesign.Components.Popper" ) }}
{{ component( "Ceres::Customer.Components.ForgotPassword" ) }}

{% if isShopBuilder %}
    {% include "Ceres::Widgets.WidgetComponents" %}
{% endif %}

{% set isItem = services.template.isItem() == "1" %}
{% set currencyFormat = config("Ceres.currency.format") %}
{% set defaultLanguage = webstoreConfig.defaultLanguage %}

<!DOCTYPE html>

<html lang="{{ lang }}" data-framework="vue" prefix="og: http://ogp.me/ns#" class="icons-loading">

<head>
    <link rel="preload" as="image" href="https://cdn02.plentymarkets.com/jpx0tvae1136/frontend/Bilder_optimiert/wohnzimmer.jpg" />
    {{ get_consent_scripts(ceresConfig.global.blockCookies) }}

    {% include getPartial('head') %}

    {% block PartialHead %}
        {% embed getPartial('page-metadata') %}{% endembed %}
    {% endblock %}

    {% for styleTemplate in get_additional_styles() %}
        {% include styleTemplate.path ignore missing with styleTemplate.params %}
    {% endfor %}

    {% if assetName == 'ceres-checkout' %}
        {{ LayoutContainer.show("Ceres::Checkout.Styles") }}
    {% endif %}
    {% if isItem %}
        {{ LayoutContainer.show("Ceres::SingleItem.Styles") }}
    {% endif %}
</head>

<body class="{{ bodyClasses | join(' ') }} {% if request.get('openBasketPreview') == 1 %} basket-open{% endif %}">

<!-- SRR:app() -->
<div id="vue-app" class="app">
    {{ context.renderState() }}
    <lazy-hydrate when-idle>
        <notifications template="#vue-notifications" :initial-notifications="{{ notifications | json_encode() }}"></notifications>
    </lazy-hydrate>

    {% include getPartial('header') %}

    <div id="page-body" class="main">
        {% block PageBody %}{% endblock %}
    </div>

    {% include getPartial('footer') %}

    <!-- LOGIN MODAL -->
    <div id="login-modal-wrapper">
        <div class="modal fade login-modal" id="login" tabindex="-1" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title h3">{{ trans("Ceres::Template.login") }}</div>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <lazy-load component="login-modal">
                        <login modal-element="login-modal-wrapper">
                            <template #extend-overlay-buttons>
                                {{ LayoutContainer.show("Ceres::LoginOverlay.ExtendOverlayButtons") }}
                            </template>
                        </login>
                    </lazy-load>
                </div>
            </div>
        </div>
    </div>
    <!-- ./LOGIN MODAL -->

    <!-- REGISTRATION MODAL -->
    <div id="simple-registration-modal-wrapper">
        <div class="modal fade" id="registration" tabindex="-1" role="dialog">
            <div class="modal-dialog">
                <lazy-load component="register-modal">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="modal-title h3">
                                {{ trans("Ceres::Template.regCreateAccount") }}

                            </div>

                            <popper v-cloak class="ml-auto">
                                <template #handle>
                                    <button class="btn btn-icon btn-secondary btn-sm">
                                        <i class="fa fa-info"></i>
                                    </button>
                                </template>
                                <template #title>
                                    {{ trans("Ceres::Template.regContactInformations") }}
                                </template>
                                <template #content>
                                    <ul class='pl-3'>
                                        <li class='mb-3'>{{ trans('Ceres::Template.regContactInfoText1') }}</li>
                                        <li class='mb-3'>{{ trans('Ceres::Template.regContactInfoText2') }}</li>
                                        <li class='mb-3'>{{ trans('Ceres::Template.regContactInfoText3') }}</li>
                                        <li>{{ trans('Ceres::Template.regContactInfoText4') }}</li>
                                    </ul>
                                </template>
                            </popper>

                            <button type="button" class="close ml-0" data-dismiss="modal" aria-hidden="true">&times;</button>
                        </div>
                        <div class="modal-body">
                            <registration :is-simple-registration="true" modal-element="simple-registration-modal-wrapper">
                                <template #extend-overlay-buttons>
                                    {{ LayoutContainer.show("Ceres::RegistrationOverlay.ExtendOverlayButtons") }}
                                </template>
                                <template #custom-address-fields>
                                    {{ LayoutContainer.show("Ceres::Checkout.CustomAddressField") }}
                                </template>
                            </registration>
                        </div>
                    </div>
                </lazy-load>
            </div>
        </div>
    </div>
    <!-- ./REGISTRATION MODAL -->
</div>
<!-- /SSR -->

<script id="app-data" type="application/json">
    <!-- SSR:global(App) -->
    {
        "config": {{ ceresConfig | json_encode | raw }},
        "urls": {{ urls | json_encode | raw }},
        "activeCurrency": "{{ currencyData[currencyFormat] }}",
        "currencyPattern": {{  services.checkout.getCurrencyPattern() | json_encode | raw }},
        "isCategoryView": {% if services.template.isCategory() == "1" %}true{% else %}false{% endif %},
        "isCheckoutView": {% if services.template.isCheckout() == "1" %}true{% else %}false{% endif %},
        "isSearch": {% if services.template.isSearch() == "1" %}true{% else %}false{% endif %},
        "isItemView": {% if isItem %}true{% else %}false{% endif %},
        "templateEvent": "{{ templateEvent }}",
        "templateType": "{{ urls.templateType }}",
        "language": "{{ lang }}",
        "defaultLanguage": "{{ defaultLanguage }}",
        "decimalSeparator": "{{ config("IO.format.separator_decimal") }}",
        "urlTrailingSlash": {{ urls.appendTrailingSlash | json_encode }},
        "propertyFileUrl": "{{ services.propertyFile.getPropertyFileUrl() }}",
        "isShopBuilder": {{ isShopBuilder | default(false) | json_encode }},
        "bundleSetting": {{ webstoreConfig.dontSplitItemBundle | default(1) }},
        "initialPleaseSelect": {{ webstoreConfig.attributeSelectDefaultOption | default(0) }},
        "publicPath": "{{ plugin_path('Ceres') ~ '/js/dist/' }}",
        "isCheapestSorting": "{{ services.template.isCheapestSorting() }}",
        "initialData": {
            "shippingCountries": {{ services.country.getActiveCountriesList() | filterFields(["id", "currLangName", "isoCode2", "states.id", "states.name"]) | json_encode | raw }},
            "shippingCountryId": {{ services.checkout.getShippingCountryId() }},
            "showNetPrices": {{ showNetPrices | json_encode }}
        },
        "features": {}
    }
    <!-- /SSR -->
</script>

{{ Translations.add( "Ceres", "Template" ) }}

{{ get_json_data() }}

<!-- SSR:entry('/plugins/sets/31/productive/Ceres/resources/js/dist/ceres-server.min.js') -->
<!-- SSR:on() -->
<script src="{{ plugin_path('Ceres') }}/js/dist/ceres-client.min.js?v={{ buildHash }}"></script>
<!-- /SSR -->
<!-- SSR:off() -->
<script src="{{ plugin_path('Ceres') }}/js/dist/ceres-base.min.js?v={{ buildHash }}"></script>
<!-- /SSR -->



<script>
    window.__loadPluginChunk = function(source) {
        return source += "?v={{ buildHash }}";
    };

    {% if request.get("openBasketPreview") == 1 %}window.ceresStore.dispatch("loadComponent", "basket-preview"){% endif %}
</script>

{{ get_filtered_tags() }}

{{ get_shop_builder_scripts( "latest", ceresConfig.log.performanceLevel == 'live') }}

{% if not services.template.shouldBeCached() %}
    <input type="hidden" id="csrf-token" value="{{ csrf_token() }}">
{% endif %}

</body>
</html>
