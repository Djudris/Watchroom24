{"version":3,"sources":["webpack:///resources/js/src/app/components/newsletter/NewsletterInput.vue","webpack:///./resources/js/src/app/components/newsletter/NewsletterInput.vue?da9a","webpack:///./resources/js/src/app/components/newsletter/NewsletterInput.vue","webpack:///./resources/js/src/app/components/newsletter/NewsletterInput.vue?3d0c","webpack:///./resources/js/src/app/components/newsletter/NewsletterInput.vue?bc91","webpack:///./resources/js/src/app/mixins/buttonSizeProperty.mixin.js"],"names":["BUTTON_SIZES","LEGACY_CLASS_MAP","ButtonSizePropertyMixin","props","buttonSize","type","String","default","validator","value","Object","keys","indexOf","computed","buttonSizeClass","hasOwnProperty"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AAEA;AACA,oGADA;AAGA;AACA,oBACA;AACA,mBADA;AAEA;AAFA,KAFA;AAMA,+BACA;AACA,mBADA;AAEA;AAFA,KAPA;AAWA,iBACA;AACA,kBADA;AAEA;AAFA;AAZA,GAHA;AAqBA,MArBA,kBAsBA;AACA;AACA,mBADA;AAEA,kBAFA;AAGA,eAHA;AAIA,uBAJA;AAKA,+BALA;AAMA,kBANA;AAOA;AAPA;AASA,GAhCA;AAkCA,YACA;AACA,qBADA,+BAEA;AACA,gIACA;AAAA;AAAA,QADA,GAEA,aAFA;AAIA;AAAA;AAAA;AACA;AARA,GAnCA;AA8CA;AACA,gBADA,0BAEA;AAAA;;AACA;AAEA,6HACA,IADA,CACA,YACA;AACA;AACA,OAJA,EAKA,IALA,CAKA,yBACA;AACA;AAEA;AACA,OAVA;AAWA,KAhBA;AAkBA,QAlBA,kBAmBA;AAAA;;AACA,kGACA,IADA,CACA,0BACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,IADA,CACA,gBACA;AACA,uCACA;AACA,uFACA,8DADA;AAGA,WALA,MAOA;AACA,0FACA,6DADA,EAEA,UAFA,CAEA,IAFA;AAGA;;AACA;AACA,SAhBA,EAiBA,IAjBA,CAiBA,YACA;AACA,sFACA,2DADA,EAEA,UAFA,CAEA,IAFA;AAGA,SAtBA,EAuBA,MAvBA,CAuBA,YACA;AACA;;AACA;AACA,SA3BA;AA4BA,OA/BA;AAgCA,KApDA;AAsDA,eAtDA,yBAuDA;AACA;AACA;AACA;AACA;AACA,KA5DA;AA8DA,kBA9DA,4BA+DA;AACA,+EACA;AACA;AAEA;AACA;AACA;AAtEA;AA9CA,G;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0DAA0D;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxHA;AAAA;AAAA;AAAA;AAA8F;AAC3B;AACL;;;AAG9D;AACsG;AACtG,gBAAgB,2GAAU;AAC1B,EAAE,qFAAM;AACR,EAAE,0FAAM;AACR,EAAE,mGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACe,gF;;;;;;;;;;;;ACnBf;AAAA;AAAA,wCAAuM,CAAgB,mPAAG,EAAC,C;;;;;;;;;;;;ACA3N;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,IAAMA,YAAY,GAAG,CAAC,QAAD,EAAW,QAAX,CAArB;AAEA,IAAMC,gBAAgB,GAAG;AACrB,QAAM,QADe;AAErB,QAAM,EAFe;AAGrB,QAAM;AAHe,CAAzB;AAMO,IAAMC,uBAAuB,GACpC;AACIC,OAAK,EAAE;AACHC,cAAU,EACV;AACIC,UAAI,EAAE,CAACC,MAAD,EAAS,IAAT,CADV;AAEIC,aAAO,EAAE,IAFb;AAGIC,eAAS,EAAE,mBAAAC,KAAK,EAChB;AACI,eAAO,CACH,EADG,SAEAT,YAFA,qBAGAU,MAAM,CAACC,IAAP,CAAYV,gBAAZ,CAHA,GAILW,OAJK,CAIGH,KAJH,MAIc,CAAC,CAJtB;AAKH;AAVL;AAFG,GADX;AAiBII,UAAQ,EAAE;AACNC,mBADM,6BAEN;AACI,UAAIb,gBAAgB,CAACc,cAAjB,CAAgC,KAAKX,UAArC,CAAJ,EACA;AACI,eAAOH,gBAAgB,CAAC,KAAKG,UAAN,CAAvB;AACH;;AAED,aAAO,KAAKA,UAAZ;AACH;AATK;AAjBd,CADO,C","file":"chunks/ceres-13.js","sourcesContent":["<template>\n    <form ref=\"newsletterForm\" :id=\"'newsletter-input-form_' + _uid\" method=\"post\" @submit.prevent=\"validateData\">\n        <div class=\"row\">\n            <div class=\"col-6\" v-if=\"showNameInputs\">\n                <div class=\"input-unit\">\n                    <label :for=\"'first-name-input_' + _uid\">{{ $translate(\"Ceres::Template.newsletterFirstName\") }}</label>\n                    <input type=\"text\" :id=\"'first-name-input_' + _uid\" v-model=\"firstName\">\n                </div>\n            </div>\n            <div class=\"col-6 pl-0\" v-if=\"showNameInputs\">\n                <div class=\"input-unit\">\n                    <label :for=\"'last-name-input_' + _uid\">{{ $translate(\"Ceres::Template.newsletterLastName\") }}</label>\n                    <input type=\"text\" :id=\"'last-name-input_' + _uid\" v-model=\"lastName\">\n                </div>\n            </div>\n\n            <div class=\"col-12\">\n                <div class=\"input-group\">\n                    <div class=\"input-unit\" data-validate=\"mail\">\n                        <label :for=\"'email-input-id_' + _uid\">{{ $translate(\"Ceres::Template.newsletterEmail\") }} *</label>\n                        <input @focus=\"loadRecaptcha = true\" type=\"email\" autocomplete=\"email\" :id=\"'email-input-id_' + _uid\" v-model=\"email\">\n                    </div>\n                    <input autocomplete=\"none\" class=\"honey\" type=\"text\" name=\"username\" tabindex=\"-1\" v-model=\"honeypot\">\n                </div>\n            </div>\n\n            <div class=\"col-12\" v-if=\"showPrivacyPolicyCheckbox\">\n                <div class=\"form-check small\" data-validate>\n                    <input type=\"checkbox\" class=\"form-check-input\" :id=\"'privacy-policy-accept-id_' + _uid\" name=\"privacy-policy-accept\" v-model=\"privacyPolicyValue\">\n                    <label :for=\"'privacy-policy-accept-id_' + _uid\" class=\"form-check-label\" v-html=\"privacyPolicyText\">\n                    </label>\n                </div>\n            </div>\n\n            <div class=\"col-12 mt-3\">\n                <div class=\"input-group-btn\">\n                    <button type=\"button\" class=\"btn btn-block btn-primary btn-appearance\" @click=\"validateData\" :disabled=\"isDisabled\" :class=\"buttonSizeClass\">\n                        <icon icon=\"paper-plane-o\" :loading=\"isDisabled\"></icon>\n                        {{ $translate(\"Ceres::Template.newsletterSubscribeButtonLabel\") }}\n                    </button>\n                </div>\n            </div>\n        </div>\n        <recaptcha v-if=\"!!$ceres.config.global.googleRecaptchaApiKey && loadRecaptcha\"></recaptcha>\n    </form>\n</template>\n\n<script>\nimport ApiService from \"../../services/ApiService\";\nimport NotificationService from \"../../services/NotificationService\";\nimport ValidationService from \"../../services/ValidationService\";\nimport { executeReCaptcha } from \"../../helper/executeReCaptcha\";\nimport { ButtonSizePropertyMixin } from \"../../mixins/buttonSizeProperty.mixin\";\n\nexport default {\n    mixins: [ButtonSizePropertyMixin],\n\n    props: {\n        showNameInputs:\n        {\n            type: Boolean,\n            default: false\n        },\n        showPrivacyPolicyCheckbox:\n        {\n            type: Boolean,\n            default: true\n        },\n        emailFolder:\n        {\n            type: Number,\n            default: 0\n        }\n    },\n\n    data()\n    {\n        return {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            isDisabled: false,\n            privacyPolicyValue: false,\n            honeypot: \"\",\n            loadRecaptcha: false\n        };\n    },\n\n    computed:\n    {\n        privacyPolicyText()\n        {\n            const link = \"<a href=\\\"\" + App.urls.privacyPolicy + \"\\\" target=\\\"_blank\\\"><span class=\\\"text-primary text-appearance\\\">\"\n                + this.$translate(\"Ceres::Template.checkoutPrivacyPolicy\", {\"hyphen\": \"&shy;\"})\n                + \"</span></a>\";\n\n            return this.$translate(\"Ceres::Template.newsletterAcceptPrivacyPolicy\", {\"policy\": link});\n        }\n    },\n\n    methods: {\n        validateData()\n        {\n            this.isDisabled = true;\n\n            ValidationService.validate($(\"#newsletter-input-form_\" + this._uid))\n                .done(() =>\n                {\n                    this.save();\n                })\n                .fail(invalidFields =>\n                {\n                    ValidationService.markInvalidFields(invalidFields, \"error\");\n\n                    this.isDisabled = false;\n                });\n        },\n\n        save()\n        {\n            executeReCaptcha(this.$el)\n            .then((recaptchaToken) =>\n            {\n                ApiService.post(\"/rest/io/customer/newsletter\", { email: this.email, firstName: this.firstName, lastName: this.lastName, emailFolder: this.emailFolder, honeypot: this.honeypot, recaptcha: recaptchaToken})\n                    .done(data =>\n                    {\n                        if (!!data.containsHoneypot)\n                        {\n                            NotificationService.warn(\n                                this.$translate(\"Ceres::Template.newsletterHoneypotWarning\")\n                            );\n                        }\n                        else\n                        {\n                            NotificationService.success(\n                                this.$translate(\"Ceres::Template.newsletterSuccessMessage\")\n                            ).closeAfter(3000);\n                        }\n                        this.resetInputs();\n                    })\n                    .fail(() =>\n                    {\n                        NotificationService.error(\n                            this.$translate(\"Ceres::Template.newsletterErrorMessage\")\n                        ).closeAfter(5000);\n                    })\n                    .always(() =>\n                    {\n                        this.isDisabled = false;\n                        this.resetRecaptcha();\n                    });\n            });\n        },\n\n        resetInputs()\n        {\n            this.firstName = \"\";\n            this.lastName = \"\";\n            this.email = \"\";\n            this.privacyPolicyValue = false;\n        },\n\n        resetRecaptcha()\n        {\n            if(App.config.global.googleRecaptchaVersion === 2 && window.grecaptcha)\n            {\n                const recaptchaId = this.$el.querySelector(\"[data-recaptcha]\");\n\n                window.grecaptcha.reset(recaptchaId);\n            }\n        },\n\n    }\n}\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"form\",\n    {\n      ref: \"newsletterForm\",\n      attrs: { id: \"newsletter-input-form_\" + _vm._uid, method: \"post\" },\n      on: {\n        submit: function($event) {\n          $event.preventDefault()\n          return _vm.validateData($event)\n        }\n      }\n    },\n    [\n      _vm._ssrNode(\n        '<div class=\"row\">',\n        \"</div>\",\n        [\n          _vm._ssrNode(\n            (_vm.showNameInputs\n              ? '<div class=\"col-6\"><div class=\"input-unit\"><label' +\n                _vm._ssrAttr(\"for\", \"first-name-input_\" + _vm._uid) +\n                \">\" +\n                _vm._ssrEscape(\n                  _vm._s(_vm.$translate(\"Ceres::Template.newsletterFirstName\"))\n                ) +\n                '</label> <input type=\"text\"' +\n                _vm._ssrAttr(\"id\", \"first-name-input_\" + _vm._uid) +\n                _vm._ssrAttr(\"value\", _vm.firstName) +\n                \"></div></div>\"\n              : \"<!---->\") +\n              \" \" +\n              (_vm.showNameInputs\n                ? '<div class=\"col-6 pl-0\"><div class=\"input-unit\"><label' +\n                  _vm._ssrAttr(\"for\", \"last-name-input_\" + _vm._uid) +\n                  \">\" +\n                  _vm._ssrEscape(\n                    _vm._s(_vm.$translate(\"Ceres::Template.newsletterLastName\"))\n                  ) +\n                  '</label> <input type=\"text\"' +\n                  _vm._ssrAttr(\"id\", \"last-name-input_\" + _vm._uid) +\n                  _vm._ssrAttr(\"value\", _vm.lastName) +\n                  \"></div></div>\"\n                : \"<!---->\") +\n              ' <div class=\"col-12\"><div class=\"input-group\"><div data-validate=\"mail\" class=\"input-unit\"><label' +\n              _vm._ssrAttr(\"for\", \"email-input-id_\" + _vm._uid) +\n              \">\" +\n              _vm._ssrEscape(\n                _vm._s(_vm.$translate(\"Ceres::Template.newsletterEmail\")) + \" *\"\n              ) +\n              '</label> <input type=\"email\" autocomplete=\"email\"' +\n              _vm._ssrAttr(\"id\", \"email-input-id_\" + _vm._uid) +\n              _vm._ssrAttr(\"value\", _vm.email) +\n              '></div> <input autocomplete=\"none\" type=\"text\" name=\"username\" tabindex=\"-1\"' +\n              _vm._ssrAttr(\"value\", _vm.honeypot) +\n              ' class=\"honey\"></div></div> ' +\n              (_vm.showPrivacyPolicyCheckbox\n                ? '<div class=\"col-12\"><div data-validate class=\"form-check small\"><input type=\"checkbox\"' +\n                  _vm._ssrAttr(\"id\", \"privacy-policy-accept-id_\" + _vm._uid) +\n                  ' name=\"privacy-policy-accept\"' +\n                  _vm._ssrAttr(\n                    \"checked\",\n                    Array.isArray(_vm.privacyPolicyValue)\n                      ? _vm._i(_vm.privacyPolicyValue, null) > -1\n                      : _vm.privacyPolicyValue\n                  ) +\n                  ' class=\"form-check-input\"> <label' +\n                  _vm._ssrAttr(\"for\", \"privacy-policy-accept-id_\" + _vm._uid) +\n                  ' class=\"form-check-label\">' +\n                  _vm._s(_vm.privacyPolicyText) +\n                  \"</label></div></div>\"\n                : \"<!---->\") +\n              \" \"\n          ),\n          _vm._ssrNode('<div class=\"col-12 mt-3\">', \"</div>\", [\n            _vm._ssrNode('<div class=\"input-group-btn\">', \"</div>\", [\n              _vm._ssrNode(\n                '<button type=\"button\"' +\n                  _vm._ssrAttr(\"disabled\", _vm.isDisabled) +\n                  _vm._ssrClass(\n                    \"btn btn-block btn-primary btn-appearance\",\n                    _vm.buttonSizeClass\n                  ) +\n                  \">\",\n                \"</button>\",\n                [\n                  _c(\"icon\", {\n                    attrs: { icon: \"paper-plane-o\", loading: _vm.isDisabled }\n                  }),\n                  _vm._ssrNode(\n                    _vm._ssrEscape(\n                      \"\\n                    \" +\n                        _vm._s(\n                          _vm.$translate(\n                            \"Ceres::Template.newsletterSubscribeButtonLabel\"\n                          )\n                        ) +\n                        \"\\n                \"\n                    )\n                  )\n                ],\n                2\n              )\n            ])\n          ])\n        ],\n        2\n      ),\n      _vm._ssrNode(\" \"),\n      !!_vm.$ceres.config.global.googleRecaptchaApiKey && _vm.loadRecaptcha\n        ? _c(\"recaptcha\")\n        : _vm._e()\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./NewsletterInput.vue?vue&type=template&id=73e680cd&\"\nimport script from \"./NewsletterInput.vue?vue&type=script&lang=js&\"\nexport * from \"./NewsletterInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  \"411323d8\"\n  \n)\n\ncomponent.options.__file = \"resources/js/src/app/components/newsletter/NewsletterInput.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewsletterInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewsletterInput.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewsletterInput.vue?vue&type=template&id=73e680cd&\"","const BUTTON_SIZES = [\"btn-sm\", \"btn-lg\"];\n\nconst LEGACY_CLASS_MAP = {\n    \"sm\": \"btn-sm\",\n    \"md\": \"\",\n    \"lg\": \"btn-lg\"\n};\n\nexport const ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    \"\",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n"],"sourceRoot":""}