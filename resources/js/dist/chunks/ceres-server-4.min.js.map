{"version":3,"sources":["webpack:///./resources/js/src/app/mixins/buttonSizeProperty.mixin.js","webpack:///./resources/js/src/app/services/AutoFocusService.js","webpack:///./resources/js/src/app/components/customer/login/Login.vue?757e","webpack:///./resources/js/src/app/components/customer/login/Login.vue?01f7","webpack:///resources/js/src/app/components/customer/login/Login.vue","webpack:///./resources/js/src/app/components/customer/login/Login.vue"],"names":["BUTTON_SIZES","LEGACY_CLASS_MAP","ButtonSizePropertyMixin","props","buttonSize","type","String","default","validator","value","Object","keys","indexOf","computed","buttonSizeClass","hasOwnProperty","this","triggerAutoFocus","modal","focusElements","App","isShopBuilder","getModalContainer","querySelectorAll","document","setTimeout","focus","autoFocus","getElementsByClassName","currentModal","ModalService","findModal","on","render","_vm","_h","$createElement","_c","_self","staticClass","_ssrNode","_ssrAttr","_uid","_ssrClass","modalElement","username","_ssrEscape","_s","$translate","password","row","_t","isDisabled","attrs","icon","loading","_withStripped","component","options","__file"],"mappings":"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","file":"chunks/ceres-server-4.min.js","sourcesContent":["const BUTTON_SIZES = [\"btn-sm\", \"btn-lg\"];\n\nconst LEGACY_CLASS_MAP = {\n    \"sm\": \"btn-sm\",\n    \"md\": \"\",\n    \"lg\": \"btn-lg\"\n};\n\nexport const ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    \"\",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n","import ModalService from \"./ModalService\";\n\nexport function autoFocus()\n{\n    for (const modal of document.getElementsByClassName(\"modal\"))\n    {\n        if (typeof modal === \"object\")\n        {\n            const currentModal = ModalService.findModal(modal);\n\n            if (currentModal)\n            {\n                currentModal.on(\"shown.bs.modal\", () =>\n                {\n                    triggerAutoFocus(currentModal);\n                });\n            }\n        }\n    }\n\n    triggerAutoFocus();\n}\n\nexport function triggerAutoFocus(modal)\n{\n    if ( App.isShopBuilder )\n    {\n        return;\n    }\n\n    let focusElements;\n\n    if (modal)\n    {\n        focusElements = modal.getModalContainer()[0].querySelectorAll(\"[data-autofocus]\");\n    }\n    else\n    {\n        focusElements = document.querySelectorAll(\"[data-autofocus]\");\n    }\n\n    setTimeout(() =>\n    {\n        if (focusElements[0]) focusElements[0].focus();\n    }, 0);\n}\n\nexport default { autoFocus, triggerAutoFocus };\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"login-pwd-reset\" }, [\n    _vm._ssrNode(\n      \"<form\" +\n        _vm._ssrAttr(\"id\", \"login-form-\" + _vm._uid) +\n        ' method=\"post\">',\n      \"</form>\",\n      [\n        _vm._ssrNode(\n          \"<div\" +\n            _vm._ssrClass(null, { \"modal-body\": _vm.modalElement }) +\n            '><div class=\"row\"><div class=\"col-12\"><div data-validate=\"mail\" class=\"input-unit\"><input data-testing=\"email-login\" type=\"email\" name=\"email\" autocomplete=\"email\"' +\n            _vm._ssrAttr(\"id\", \"email\" + _vm._uid) +\n            \" data-autofocus\" +\n            _vm._ssrAttr(\"value\", _vm.username) +\n            \"> <label\" +\n            _vm._ssrAttr(\"for\", \"email\" + _vm._uid) +\n            \">\" +\n            _vm._ssrEscape(\n              _vm._s(_vm.$translate(\"Ceres::Template.loginEmail\")) + \"*\"\n            ) +\n            '</label></div> <span class=\"error-msg\">' +\n            _vm._ssrEscape(\n              _vm._s(_vm.$translate(\"Ceres::Template.loginEnterConfirmEmail\"))\n            ) +\n            '</span></div> <div class=\"col-12\"><div data-validate=\"text\"' +\n            _vm._ssrClass(\"input-unit\", { \"no-bottom\": _vm.modalElement }) +\n            '><input data-testing=\"password-login\" type=\"password\" name=\"password\" autocomplete=\"current-password\"' +\n            _vm._ssrAttr(\"id\", \"password\" + _vm._uid) +\n            _vm._ssrAttr(\"value\", _vm.password) +\n            \"> <label\" +\n            _vm._ssrAttr(\"for\", \"password\" + _vm._uid) +\n            \">\" +\n            _vm._ssrEscape(\n              _vm._s(_vm.$translate(\"Ceres::Template.loginPassword\")) + \"*\"\n            ) +\n            '</label></div> <span class=\"error-msg\">' +\n            _vm._ssrEscape(\n              _vm._s(_vm.$translate(\"Ceres::Template.loginEmptyPassword\"))\n            ) +\n            \"</span></div></div></div> \"\n        ),\n        _vm._ssrNode(\n          \"<div\" +\n            _vm._ssrClass(null, {\n              \"modal-footer justify-content-between\": _vm.modalElement,\n              row: !_vm.modalElement\n            }) +\n            \">\",\n          \"</div>\",\n          [\n            _vm._ssrNode(\n              \"<div\" +\n                _vm._ssrClass(null, { \"col-7 col-sm-4\": !_vm.modalElement }) +\n                '><a href=\"javascript:void(0)\" class=\"small text-appearance\">' +\n                _vm._ssrEscape(\n                  _vm._s(\n                    _vm.$translate(\"Ceres::Template.loginForgotPassword\")\n                  ) + \"?\"\n                ) +\n                \"</a></div> \"\n            ),\n            _vm._ssrNode(\n              \"<div\" +\n                _vm._ssrClass(null, {\n                  \"col-5 col-sm-8 text-sm-right\": !_vm.modalElement\n                }) +\n                \">\",\n              \"</div>\",\n              [\n                _vm._t(\"extend-overlay-buttons\"),\n                _vm._ssrNode(\" \"),\n                _vm._ssrNode(\n                  '<button data-testing=\"submit-login\"' +\n                    _vm._ssrAttr(\"disabled\", _vm.isDisabled) +\n                    _vm._ssrClass(\"btn btn-primary btn-appearance btn-medium\", [\n                      { \"float-right\": !_vm.modalElement },\n                      _vm.buttonSizeClass\n                    ]) +\n                    \">\",\n                  \"</button>\",\n                  [\n                    _vm._ssrNode(\n                      _vm._ssrEscape(\n                        \"\\n                    \" +\n                          _vm._s(_vm.$translate(\"Ceres::Template.login\")) +\n                          \"\\n                    \"\n                      )\n                    ),\n                    _c(\"icon\", {\n                      attrs: { icon: \"user\", loading: _vm.isDisabled }\n                    })\n                  ],\n                  2\n                )\n              ],\n              2\n            )\n          ],\n          2\n        )\n      ],\n      2\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"","<template>\n    <div class=\"login-pwd-reset\">\n        <form :id=\"'login-form-' + _uid\" method=\"post\">\n            <div :class=\"{'modal-body': modalElement}\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"input-unit\" data-validate=\"mail\">\n                            <input data-testing=\"email-login\" type=\"email\" name=\"email\" autocomplete=\"email\" :id=\"'email' + _uid\" v-model=\"username\" data-autofocus>\n                            <label :for=\"'email' + _uid\">{{ $translate(\"Ceres::Template.loginEmail\") }}*</label>\n                        </div>\n                        <span class=\"error-msg\">{{ $translate(\"Ceres::Template.loginEnterConfirmEmail\") }}</span>\n                    </div>\n                    <div class=\"col-12\">\n                        <div class=\"input-unit\" :class=\"{'no-bottom': modalElement}\" data-validate=\"text\">\n                            <input data-testing=\"password-login\" type=\"password\" name=\"password\" autocomplete=\"current-password\" :id=\"'password' + _uid\" v-model=\"password\">\n                            <label :for=\"'password' + _uid\">{{ $translate(\"Ceres::Template.loginPassword\") }}*</label>\n                        </div>\n                        <span class=\"error-msg\">{{ $translate(\"Ceres::Template.loginEmptyPassword\") }}</span>\n                    </div>\n                </div>\n            </div>\n            <div :class=\"{'modal-footer justify-content-between': modalElement, 'row': !modalElement}\">\n                <div :class=\"{'col-7 col-sm-4': !modalElement}\">\n                    <a href=\"javascript:void(0)\" @click=\"showResetPwdView\" class=\"small text-appearance\">{{ $translate(\"Ceres::Template.loginForgotPassword\") }}?</a>\n                </div>\n                <div :class=\"{'col-5 col-sm-8 text-sm-right': !modalElement}\">\n                    <slot name=\"extend-overlay-buttons\"></slot>\n                    <button data-testing=\"submit-login\" @click.prevent=\"validateLogin\" :disabled=\"isDisabled\" class=\"btn btn-primary btn-appearance btn-medium\" :class=\"[{'float-right': !modalElement}, buttonSizeClass]\">\n                        {{ $translate(\"Ceres::Template.login\") }}\n                        <icon icon=\"user\" :loading=\"isDisabled\"></icon>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\nimport { ButtonSizePropertyMixin } from \"../../../mixins/buttonSizeProperty.mixin\";\n\nimport ApiService from \"../../../services/ApiService\";\nimport NotificationService from \"../../../services/NotificationService\";\nimport ModalService from \"../../../services/ModalService\";\nimport AutoFocusService from \"../../../services/AutoFocusService\";\nimport ValidationService from \"../../../services/ValidationService\";\nimport { getContainingComponent } from \"../../../helper/utils\";\n\nexport default {\n    mixins: [ButtonSizePropertyMixin],\n\n    props: {\n        backlink: {\n            type: String\n        },\n        modalElement: {\n            type: String\n        },\n        hasToForward:\n        {\n            type: Boolean,\n            default: false\n        }\n    },\n\n    data()\n    {\n        return {\n            password: \"\",\n            username: \"\",\n            loginFields: [],\n            isDisabled: false\n        };\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            this.loginFields = document.querySelector(\"#login-form-\" + this._uid).querySelectorAll(\".input-unit\");\n\n            AutoFocusService.triggerAutoFocus();\n        });\n    },\n\n    watch:\n    {\n        password(val, oldVal)\n        {\n            this.resetError();\n        },\n\n        username(val, oldVal)\n        {\n            this.resetError();\n        }\n    },\n\n    methods:\n    {\n        /**\n         * Open the login modal\n         */\n        showLogin()\n        {\n            ModalService.findModal(document.getElementById(this.modalElement)).show();\n        },\n\n        validateLogin()\n        {\n            ValidationService.validate($(\"#login-form-\" + this._uid))\n                .done(() =>\n                {\n                    this.sendLogin();\n                })\n                .fail(invalidFields =>\n                {\n                    ValidationService.markInvalidFields(invalidFields, \"error\");\n                });\n        },\n\n        /**\n         * Send the login data\n         */\n        sendLogin()\n        {\n            this.isDisabled = true;\n\n            ApiService.post(\"/rest/io/customer/login\", { email: this.username, password: this.password }, { supressNotifications: true })\n                .done(response =>\n                {\n                    ApiService.setToken(response);\n\n                    NotificationService.success(\n                        this.$translate(\"Ceres::Template.loginSuccessful\")\n                    ).closeAfter(3000);\n\n                    if (this.backlink !== null && this.backlink)\n                    {\n                        location.assign(decodeURIComponent(this.backlink));\n                    }\n                    else if (this.hasToForward)\n                    {\n                        location.assign(location.origin);\n                    }\n                    else\n                    {\n                        location.reload();\n                    }\n                })\n                .fail(response =>\n                {\n                    this.isDisabled = false;\n\n                    switch (response.error.code)\n                    {\n                        case 401:\n                            this.loginFields.forEach(element => element.classList.add(\"has-login-error\"));\n\n                            let translationKey = \"Ceres::Template.loginFailed\";\n\n                            if (response.error.message.length > 0 && response.error.message === \"user is blocked\")\n                            {\n                                translationKey = \"Ceres::Template.loginBlocked\";\n                            }\n                            NotificationService.error(\n                                this.$translate(translationKey)\n                            ).closeAfter(10000);\n                            break;\n                        default:\n                            return;\n                    }\n                });\n        },\n\n        showResetPwdView()\n        {\n            this.resetError();\n\n            this.$store.dispatch(\"loadComponent\", \"forgot-password-modal\");\n\n            Vue.nextTick(() =>\n            {\n                let modalDOM = document.querySelector('#resetPwd');\n                let modalVue = getContainingComponent(modalDOM);\n\n                modalVue.$data.username = this.username;\n\n                let showModal = () => ModalService.findModal(modalDOM).show();\n\n                if(this.modalElement)\n                {\n                    ModalService\n                        .findModal(document.getElementById(this.modalElement))\n                        .hide()\n                        .then(showModal);\n                }\n                else\n                {\n                    showModal();\n                }\n            });\n        },\n\n        resetError()\n        {\n            this.loginFields.forEach( element => element.classList.remove(\"has-login-error\"));\n            ValidationService.unmarkAllFields(\"#login-form-\" + this._uid);\n        }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=0f0e37b8&\"\nimport script from \"./Login.vue?vue&type=script&lang=js&\"\nexport * from \"./Login.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  \"45bacaed\"\n  \n)\n\ncomponent.options.__file = \"resources/js/src/app/components/customer/login/Login.vue\"\nexport default component.exports"],"sourceRoot":""}