# name: End-to-end tests
# on: [push]
# jobs:
#   cypress-run:
#     runs-on: ubuntu-16.04
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       # Install NPM dependencies, cache them correctly
#       # and run all Cypress tests
#       - name: Cypress run
#         uses: cypress-io/github-action@v2

# name: Parallel Cypress Tests

# on: [push]

# jobs:
#   test:
#     name: Cypress run
#     runs-on: ubuntu-16.04
#     strategy:
#       # when one test fails, DO NOT cancel the other
#       # containers, because this will kill Cypress processes
#       # leaving the Dashboard hanging ...
#       # https://github.com/cypress-io/github-action/issues/48
#       fail-fast: false
#       matrix:
#         # run 3 copies of the current job in parallel
#         containers: [1, 2]
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1

#       # because of "record" and "parallel" parameters
#       # these containers will load balance all found tests among themselves
#       - name: Cypress run
#         uses: cypress-io/github-action@v2
#         with:
#           build: npm run build
#           record: true
#           parallel: true
#           group: 'Actions example'
#         env:
#           # pass the Dashboard record key as an environment variable
#           CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
#           # Recommended: pass the GitHub token lets this action correctly
#           # determine the unique run id necessary to re-run the checks
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# name: Artifacts
# on: [push]
# jobs:
#   cypress-run:
#     runs-on: ubuntu-16.04
#     name: Artifacts
#     steps:
#       - uses: actions/checkout@v1
#       - uses: cypress-io/github-action@v2
#       # after the test run completes
#       # store videos and any screenshots
#       # NOTE: screenshots will be generated only if E2E test failed
#       # thus we store screenshots only on failures
#       # Alternative: create and commit an empty cypress/screenshots folder
#       # to always have something to upload
#       - uses: actions/upload-artifact@v1
#         if: failure()
#         with:
#           name: cypress-screenshots
#           path: cypress/screenshots
#       # Test run video was always captured, so this action uses "always()" condition
#       - uses: actions/upload-artifact@v1
#         if: failure()
#         with:
#           name: cypress-videos
#           path: cypress/videos